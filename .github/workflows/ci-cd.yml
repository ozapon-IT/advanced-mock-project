name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - production-main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, intl

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Copy .env.testing
        run: cp .env.testing.example .env.testing

      - name: Generate application key
        run: php artisan key:generate --env=testing

      - name: Run tests
        run: php artisan test --env=testing

      - name: Notify Slack on test failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "❌ CI/CD Pipeline - テストが失敗しました 🚨"

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/advanced-mock-project
            git pull origin production-main
            docker-compose down
            docker-compose up -d --build
            docker-compose exec php php artisan cache:clear
            docker-compose exec php php artisan config:cache
            docker-compose exec php php artisan route:cache
            docker-compose exec php php artisan view:cache

      - name: Notify Slack on deploy failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "❌ CI/CD Pipeline - デプロイが失敗しました 🚨"